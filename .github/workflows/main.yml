name: comet-core CI

on:
  # Trigger the workflow on all push, pull request for the master branch and release events
  push:
  pull_request:
    branches: [ master ]
    types: [closed]
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8, 3.9]
        include: # define single matrix case that performs the upload
          - os: ubuntu-latest
            python: 3.6
            upload: true
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Cache pip check
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-mypy-${{ hashFiles('setup.py','requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-mypy-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Run Tox
        # Run tox using the version of Python in `PATH`
        run: tox -e py
      - name: Build python packages to /dist
        run: |
          pip install twine wheel
          python setup.py sdist -d dist bdist_wheel -d dist
      - name: Twine check for the build artifacts
        run: |
          python -m twine check dist/*
        shell: bash
      - name: Release package to pypi
        if: matrix.upload && github.event_name == 'release' &&  github.event.action == 'published' && startsWith(github.ref, 'refs/tags')
        run: |
          python -m twine upload --skip-existing dist/*
        shell: bash
        env:
          TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
